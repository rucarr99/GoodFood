@using Microsoft.AspNetCore.Identity

@inject SignInManager<CustomUser> _signInManager
@inject UserManager<CustomUser> _userManager

<ul class="navbar-nav">
@if (_signInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @if(_userManager.GetUserAsync(User).Result.ProfilePicture!=null)
        {
            <img style="width: 40px; height: 300px; object-fit: cover; border-radius: 30px;" src="uploads/@_userManager.GetUserAsync(User).Result.ProfilePicture" alt=""/>
        }
    </li>
    <ul>
    <li class="nav-item">
        <a id="manage" class="nav-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@_userManager.GetUserName(User)!</a>
    </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="navbar-link">Logout</button>
            </form>
        </li>
    </ul>
}
else
{

    <ul>
        <li class="navbar-item">
            <a class="navbar-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="navbar-item">
            <a class="navbar-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    </ul>
}
</ul>
